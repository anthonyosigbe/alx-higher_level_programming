===========================================
Instructions for Utilizing 0-add_integer.py
===========================================

This module establishes a function for adding integers ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

::

    >>> add_integer(2, -3)
    -1

The function is also compatible with floating-point numbers.

::

    >>> add_integer(2.0, 3.0)
    5

Please be aware that floating-point values are converted to integers before addition takes place.

::

    >>> add_integer(2.9, 0.2)
    2

::

    >>> add_integer(-2.9, -0.2)
    -2

It is possible to combine both floating-point and non-floating-point values.

::

    >>> add_integer(2.3, -3)
    -1

The second argument is optional - by default, it is 98.

::

    >>> add_integer(2)
    100

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("hello", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

